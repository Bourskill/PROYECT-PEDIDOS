<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Tabla Navegable</title>
  <style>
    table {
      border-collapse: collapse;
      width: 100%;
    }
    td, th {
      border: 1px solid black;
      padding: 10px;
      text-align: center;
      width: 100px;
    }
    .highlight {
      background-color: yellow;
    }
  </style>
</head>
<body>

<h2>Tabla Navegable con Teclas</h2>
<table id="miTabla">
  <thead>
    <tr>
      <th>Header 1</th>
      <th>Header 2</th>
      <th>Header 3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Celda 1,1</td>
      <td>Celda 1,2</td>
      <td>Celda 1,3</td>
    </tr>
    <tr>
      <td>Celda 2,1</td>
      <td>Celda 2,2</td>
      <td>Celda 2,3</td>
    </tr>
    <tr>
      <td>Celda 3,1</td>
      <td>Celda 3,2</td>
      <td>Celda 3,3</td>
    </tr>
  </tbody>
</table>

<script>
  // Selección de la tabla y celdas
  const table = document.getElementById("miTabla");
  const cells = table.getElementsByTagName("td");
  let currentCell = null; // No hay celda activa inicialmente

  // Función para resaltar la celda
  function highlightCell(cell) {
    // Eliminar el resaltado previo
    const highlighted = document.querySelector('.highlight');
    if (highlighted) {
      highlighted.classList.remove('highlight');
    }
    // Resaltar la celda actual
    if (cell) {
      cell.classList.add('highlight');
    }
  }

  // Función para mover el enfoque a la siguiente celda
  function moveFocus(event) {
    if (!currentCell) return; // No hacer nada si no hay celda seleccionada

    const currentIndex = Array.from(cells).indexOf(currentCell);
    let newCell;

    switch (event.key) {
      case "ArrowUp":
        if (currentIndex - 3 >= 0) newCell = cells[currentIndex - 3];
        break;
      case "ArrowDown":
        if (currentIndex + 3 < cells.length) newCell = cells[currentIndex + 3];
        break;
      case "ArrowLeft":
        if (currentIndex % 3 !== 0) newCell = cells[currentIndex - 1];
        break;
      case "ArrowRight":
        if ((currentIndex + 1) % 3 !== 0) newCell = cells[currentIndex + 1];
        break;
    }

    if (newCell) {
      currentCell = newCell;
      highlightCell(currentCell);
    }
  }

  // Función para comenzar a mover el foco
  function startNavigation(event) {
    if (currentCell === null) {
      // Cuando el usuario presiona una tecla por primera vez, activamos la primera celda
      currentCell = cells[0];
      highlightCell(currentCell);
    }
    // Ahora escuchamos el evento de navegación
    moveFocus(event);
  }

  // Función para deseleccionar la celda cuando presionamos "Esc"
  function deselectCell(event) {
    if (event.key === "Escape") {
      // Si hay una celda seleccionada, la deseleccionamos
      if (currentCell) {
        currentCell.classList.remove('highlight');
        currentCell = null; // Desactivamos la selección
      }
    }
  }

  // Agregar eventos para escuchar las teclas presionadas
  document.addEventListener("keydown", startNavigation);
  document.addEventListener("keydown", deselectCell);
</script>

</body>
</html>
	